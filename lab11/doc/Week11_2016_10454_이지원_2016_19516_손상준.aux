\relax 
\providecommand\hyper@newdestlabel[2]{}
\providecommand\HyperFirstAtBeginDocument{\AtBeginDocument}
\HyperFirstAtBeginDocument{\ifx\hyper@anchor\@undefined
\global\let\oldcontentsline\contentsline
\gdef\contentsline#1#2#3#4{\oldcontentsline{#1}{#2}{#3}}
\global\let\oldnewlabel\newlabel
\gdef\newlabel#1#2{\newlabelxx{#1}#2}
\gdef\newlabelxx#1#2#3#4#5#6{\oldnewlabel{#1}{{#2}{#3}}}
\AtEndDocument{\ifx\hyper@anchor\@undefined
\let\contentsline\oldcontentsline
\let\newlabel\oldnewlabel
\fi}
\fi}
\global\let\hyper@last\relax 
\gdef\HyperFirstAtBeginDocument#1{#1}
\providecommand\HyField@AuxAddToFields[1]{}
\providecommand\HyField@AuxAddToCoFields[2]{}
\citation{lab11}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces Memcopy and DMA Process with BRAM\nobreakspace  {}\cite  {lab11}.}}{1}{figure.1}\protected@file@percent }
\newlabel{fig1}{{1}{1}{Memcopy and DMA Process with BRAM~\cite {lab11}}{figure.1}{}}
\@writefile{toc}{\contentsline {section}{\numberline {1}Implementation}{1}{section.1}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces Address of block elements}}{1}{figure.2}\protected@file@percent }
\newlabel{fig2}{{2}{1}{Address of block elements}{figure.2}{}}
\citation{CDMA}
\@writefile{lof}{\contentsline {figure}{\numberline {3}{\ignorespaces AXI CDMA Register Address map}}{2}{figure.3}\protected@file@percent }
\newlabel{fig4}{{3}{2}{AXI CDMA Register Address map}{figure.3}{}}
\@writefile{lof}{\contentsline {figure}{\numberline {4}{\ignorespaces AXI CDMA Register Address map (cont.)}}{3}{figure.4}\protected@file@percent }
\newlabel{fig5}{{4}{3}{AXI CDMA Register Address map (cont.)}{figure.4}{}}
\@writefile{toc}{\contentsline {section}{\numberline {2}Result}{3}{section.2}\protected@file@percent }
\@writefile{lof}{\contentsline {figure}{\numberline {5}{\ignorespaces \texttt  {for-loop}(\textit  {MCPY1})/\texttt  {memcpy}(\textit  {MCPY2}) 비교, DMA/CPU memory load의 수행시간 (micro second) 비교: DMA를 사용하여 non-cacheable memory에서 BRAM으로 데이터를 전달하는 시간이 CPU의 내장함수 \texttt  {memcpy} 보다 훨씬 (약 7배) 적은 시간 이 걸렸다.}}{3}{figure.5}\protected@file@percent }
\newlabel{fig6}{{5}{3}{\texttt {for-loop}(\textit {MCPY1})/\texttt {memcpy}(\textit {MCPY2}) 비교, DMA/CPU memory load의 수행시간 (micro second) 비교: DMA를 사용하여 non-cacheable memory에서 BRAM으로 데이터를 전달하는 시간이 CPU의 내장함수 \texttt {memcpy} 보다 훨씬 (약 7배) 적은 시간 이 걸렸다}{figure.5}{}}
\bibstyle{plain}
\bibdata{other}
\bibcite{lab11}{1}
\bibcite{CDMA}{2}
\@writefile{lof}{\contentsline {figure}{\numberline {6}{\ignorespaces Implementation, DMA 모듈을 함께 넣어 하드웨어 구현을 하였을 때의 모습이다.}}{4}{figure.6}\protected@file@percent }
\newlabel{fig7}{{6}{4}{Implementation, DMA 모듈을 함께 넣어 하드웨어 구현을 하였을 때의 모습이다}{figure.6}{}}
\@writefile{toc}{\contentsline {section}{\numberline {3}Conclusion}{4}{section.3}\protected@file@percent }
